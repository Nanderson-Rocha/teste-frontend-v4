{"ast":null,"code":"import \"core-js/modules/es.array.flat-map.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.unscopables.flat-map.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport LMapRoute from \"../components/LMapRoute\";\nimport equipment from \"../data/equipment.json\";\nimport positionHistory from \"../data/equipmentPositionHistory.json\"; // Importe o histórico de posições\n\nexport default {\n  name: \"EquipmentMap\",\n  components: {\n    LMapRoute: LMapRoute\n  },\n  data: function data() {\n    return {\n      selectedName: null,\n      // Nome do equipamento selecionado\n      setNome: [],\n      // Lista de nomes dos equipamentos para o v-select\n      nameToIdMap: new Map(),\n      // Mapa para associar nome ao id\n      selectedEquipmentId: null,\n      // ID do equipamento selecionado\n      selectedDate: null,\n      // Data selecionada\n      setDate: [],\n      // Lista de datas disponíveis para o v-select de datas\n      dateChanged: false // Controla se a data foi alterada pelo usuário\n    };\n  },\n  mounted: function mounted() {\n    // Preencher a lista de nomes e o mapa de associação nome-id\n    this.setNome = equipment.map(function (equip) {\n      return equip.name;\n    });\n    this.nameToIdMap = new Map(equipment.map(function (equip) {\n      return [equip.name, equip.id];\n    }));\n\n    // Preencher a lista de datas com as datas disponíveis no histórico de posições\n    this.setDate = Array.from(new Set(positionHistory.flatMap(function (eq) {\n      return eq.positions.map(function (pos) {\n        var date = new Date(pos.date).toLocaleDateString(\"pt-BR\");\n        return date;\n      });\n    }))).sort(function (a, b) {\n      return new Date(a) - new Date(b);\n    }); // Ordenar datas\n\n    // Definir o equipamento selecionado inicialmente\n    if (this.setNome.length > 0) {\n      this.selectedName = this.setNome[0];\n      this.selectedEquipmentId = this.nameToIdMap.get(this.selectedName);\n    }\n  },\n  watch: {\n    selectedName: function selectedName(newName) {\n      // Atualizar o ID do equipamento conforme o nome selecionado\n      this.selectedEquipmentId = this.nameToIdMap.get(newName);\n    },\n    selectedDate: function selectedDate(newDate) {\n      // Atualizar o ID do equipamento conforme o nome selecionado\n      this.selectedDate = newDate;\n      console.log(\"Selected Date:\", this.selectedDate);\n    }\n  },\n  methods: {\n    onEquipmentChange: function onEquipmentChange() {\n      // Função disparada quando o nome do equipamento é selecionado no v-select\n      console.log(\"Selected Equipment Name:\", this.selectedName);\n      console.log(\"Selected Equipment ID:\", this.selectedEquipmentId);\n    },\n    onDateChange: function onDateChange() {\n      // Função disparada quando a data é selecionada no v-select\n      this.dateChanged = true; // Marca que a data foi alterada pelo usuário\n      console.log(\"Selected Date (BR format):\", this.selectedDate);\n    }\n  }\n};","map":{"version":3,"names":["LMapRoute","equipment","positionHistory","name","components","data","selectedName","setNome","nameToIdMap","Map","selectedEquipmentId","selectedDate","setDate","dateChanged","mounted","map","equip","id","Array","from","Set","flatMap","eq","positions","pos","date","Date","toLocaleDateString","sort","a","b","length","get","watch","newName","newDate","console","log","methods","onEquipmentChange","onDateChange"],"sources":["/home/bruno/Documentos/Teste Aiko - FRONT END/teste-frontend-v4/src/views/RouteView.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-col cols=\"12\" md=\"3\" class=\"my-0\">\n      <!-- Componente v-select para selecionar o nome do equipamento -->\n      <v-select\n        class=\"mt-2\"\n        variant=\"outlined\"\n        density=\"compact\"\n        v-model=\"selectedName\"\n        :items=\"setNome\"\n        label=\"Selecione o Equipamento\"\n        @change=\"onEquipmentChange\"\n      />\n    </v-col>\n    \n    <v-col cols=\"12\" md=\"3\" class=\"my-0\">\n      <!-- Componente v-select para selecionar a data -->\n      <v-select\n        class=\"mt-2\"\n        variant=\"outlined\"\n        density=\"compact\"\n        v-model=\"selectedDate\"\n        :items=\"setDate\"\n        label=\"Selecione a Data\"\n        @change=\"onDateChange\"\n      />\n    </v-col>\n\n    <!-- Passar o equipmentId e a selectedDate como props para o LMapRoute -->\n    <v-container justify=\"center\" class=\"ml-3 border-map\">\n      <!-- Só passar selectedDate se a data já tiver sido alterada -->\n      <LMapRoute :selectedEquipmentId=\"selectedEquipmentId\" :selectedDate=\"dateChanged ? selectedDate : null\" />\n    </v-container>\n  </v-container>\n</template>\n\n<script>\nimport LMapRoute from \"../components/LMapRoute\";\nimport equipment from \"../data/equipment.json\";\nimport positionHistory from \"../data/equipmentPositionHistory.json\"; // Importe o histórico de posições\n\nexport default {\n  name: \"EquipmentMap\",\n  components: {\n    LMapRoute,\n  },\n  data() {\n    return {\n      selectedName: null, // Nome do equipamento selecionado\n      setNome: [], // Lista de nomes dos equipamentos para o v-select\n      nameToIdMap: new Map(), // Mapa para associar nome ao id\n      selectedEquipmentId: null, // ID do equipamento selecionado\n      selectedDate: null, // Data selecionada\n      setDate: [], // Lista de datas disponíveis para o v-select de datas\n      dateChanged: false, // Controla se a data foi alterada pelo usuário\n    };\n  },\n  mounted() {\n    // Preencher a lista de nomes e o mapa de associação nome-id\n    this.setNome = equipment.map((equip) => equip.name);\n    this.nameToIdMap = new Map(\n      equipment.map((equip) => [equip.name, equip.id])\n    );\n\n    // Preencher a lista de datas com as datas disponíveis no histórico de posições\n    this.setDate = Array.from(\n      new Set(positionHistory.flatMap((eq) => eq.positions.map((pos) => {\n        const date = new Date(pos.date).toLocaleDateString(\"pt-BR\");\n        return date;\n      })))\n    ).sort((a, b) => new Date(a) - new Date(b)); // Ordenar datas\n\n    // Definir o equipamento selecionado inicialmente\n    if (this.setNome.length > 0) {\n      this.selectedName = this.setNome[0];\n      this.selectedEquipmentId = this.nameToIdMap.get(this.selectedName);\n    }\n  },\n  watch: {\n    selectedName(newName) {\n      // Atualizar o ID do equipamento conforme o nome selecionado\n      this.selectedEquipmentId = this.nameToIdMap.get(newName);\n    },\n    selectedDate(newDate) {\n      // Atualizar o ID do equipamento conforme o nome selecionado\n      this.selectedDate = newDate;\n      console.log(\"Selected Date:\", this.selectedDate);\n    },\n  },\n  methods: {\n    onEquipmentChange() {\n      // Função disparada quando o nome do equipamento é selecionado no v-select\n      console.log(\"Selected Equipment Name:\", this.selectedName);\n      console.log(\"Selected Equipment ID:\", this.selectedEquipmentId);\n    },\n    onDateChange() {\n      // Função disparada quando a data é selecionada no v-select\n      this.dateChanged = true; // Marca que a data foi alterada pelo usuário\n      console.log(\"Selected Date (BR format):\", this.selectedDate);\n    },\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}