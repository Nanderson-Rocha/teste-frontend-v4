{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-routing-machine\";\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\nimport positionHistory from \"../data/equipmentPositionHistory.json\";\nexport default {\n  name: \"LMapRoute\",\n  props: {\n    selectedEquipmentId: {\n      type: String,\n      required: true\n    },\n    selectedDate: {\n      type: String,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      markers: [],\n      routeControl: null,\n      // Para armazenar o controle de rota\n      loading: false // Estado de carregamento\n    };\n  },\n  watch: {\n    // Atualizar os marcadores quando o equipamento ou a data forem modificados\n    selectedEquipmentId: function selectedEquipmentId(newEquipmentId) {\n      this.loadMarkersFromJson(newEquipmentId, this.selectedDate);\n    },\n    selectedDate: function selectedDate(newDate) {\n      this.loadMarkersFromJson(this.selectedEquipmentId, newDate);\n    }\n  },\n  mounted: function mounted() {\n    this.createMapLayer();\n  },\n  beforeUnmount: function beforeUnmount() {\n    if (this.map) {\n      this.map.remove();\n    }\n  },\n  methods: {\n    loadMarkersFromJson: function loadMarkersFromJson(equipmentId, selectedDate) {\n      var _this = this;\n      this.loading = true;\n      this.markers = [];\n\n      // Filtrar equipamento e data, se disponível\n      var equipment = positionHistory.find(function (eq) {\n        return eq.equipmentId === equipmentId;\n      });\n      if (equipment) {\n        var filteredPositions = selectedDate ? equipment.positions.filter(function (position) {\n          return new Date(position.date).toLocaleDateString(\"pt-BR\") === selectedDate;\n        }) : equipment.positions;\n        filteredPositions.forEach(function (position) {\n          var formattedDate = new Date(position.date).toLocaleDateString(\"pt-BR\");\n          _this.markers.push({\n            latitude: position.lat,\n            longitude: position.lon,\n            descricao: \"Data: \".concat(formattedDate)\n          });\n        });\n\n        // Adiciona a rota somente se o mapa estiver pronto\n        if (this.map) {\n          this.addRoute();\n        }\n      } else {\n        this.loading = false;\n      }\n    },\n    createMapLayer: function createMapLayer() {\n      var _this2 = this;\n      // Inicialize o mapa localmente\n      var map = L.map(\"mapContainer\").setView([0, 0], 2);\n      L.tileLayer(\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\", {\n        attribution: '&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(map);\n      this.map = map; // Armazena o mapa localmente\n\n      map.whenReady(function () {\n        console.log(\"Mapa carregado com sucesso!\");\n        _this2.setMarkers(map); // Certifique-se de que o mapa está pronto antes de adicionar marcadores\n      });\n    },\n    addRoute: function addRoute() {\n      var _this3 = this;\n      if (!this.map || this.markers.length === 0) {\n        this.loading = false; // Finaliza o loading se não houver marcadores\n        return;\n      }\n      var waypoints = this.markers.map(function (marker) {\n        return L.latLng(marker.latitude, marker.longitude);\n      });\n\n      // Remove o controle de rota anterior, se existir\n      if (this.routeControl) {\n        this.map.removeControl(this.routeControl);\n      }\n\n      // Adiciona a nova rota e cria marcadores com popups\n      this.routeControl = L.Routing.control({\n        waypoints: waypoints,\n        createMarker: function createMarker(i, waypoint) {\n          var color = i === 0 ? \"green\" : i === waypoints.length - 1 ? \"red\" : \"darkblue\";\n          var number = i + 1; // Número no marcador\n\n          // Criar o marcador com o número centralizado\n          var icon = L.divIcon({\n            className: \"custom-icon\",\n            html: \"<div style=\\\"background-color: \".concat(color, \"; color: white; border-radius: 50%; width: 30px; height: 30px; text-align: center; line-height: 30px; font-size: 14px; font-weight: bold;\\\">\").concat(number, \"</div>\"),\n            iconSize: [30, 30],\n            iconAnchor: [15, 30]\n          });\n\n          // Criar o marcador\n          var marker = L.marker(waypoint.latLng, {\n            icon: icon\n          });\n\n          // Adicionar o popup com a data, latitude e longitude\n          var _this3$markers$i = _this3.markers[i],\n            descricao = _this3$markers$i.descricao,\n            latitude = _this3$markers$i.latitude,\n            longitude = _this3$markers$i.longitude;\n          marker.bindPopup(\"\\n            <div>\\n              <p><strong>Data:</strong> \".concat(descricao, \"</p>\\n              <p><strong>Latitude:</strong> \").concat(latitude, \"</p>\\n              <p><strong>Longitude:</strong> \").concat(longitude, \"</p>\\n            </div>\\n          \"));\n          return marker;\n        },\n        routeWhileDragging: false\n      }).addTo(this.map);\n      this.routeControl.on(\"routesfound\", function () {\n        // Finaliza o loading após a rota ser traçada\n        _this3.loading = false;\n      });\n      this.routeControl.on(\"routingerror\", function () {\n        // Finaliza o loading em caso de erro\n        _this3.loading = false;\n      });\n    },\n    setMarkers: function setMarkers() {\n      var _this4 = this;\n      var bounds = [];\n      this.markers.forEach(function (markerData, i) {\n        var color = i === 0 ? \"green\" : i === _this4.markers.length - 1 ? \"red\" : \"darkblue\";\n        var number = i + 1; // Número no marcador\n\n        // Criar o marcador com o número centralizado\n        var icon = L.divIcon({\n          className: \"custom-icon\",\n          html: \"<div style=\\\"background-color: \".concat(color, \"; color: white; border-radius: 50%; width: 30px; height: 30px; text-align: center; line-height: 30px; font-size: 14px; font-weight: bold;\\\">\").concat(number, \"</div>\"),\n          iconSize: [30, 30],\n          iconAnchor: [15, 30]\n        });\n        var marker = L.marker([markerData.latitude, markerData.longitude], {\n          icon: icon\n        }).bindPopup(\"\\n          <div>\\n            <p><strong>Data:</strong> \".concat(markerData.descricao, \"</p>\\n            <p><strong>Latitude:</strong> \").concat(markerData.latitude, \"</p>\\n            <p><strong>Longitude:</strong> \").concat(markerData.longitude, \"</p>\\n          </div>\\n        \"));\n        marker.addTo(_this4.map);\n        bounds.push([markerData.latitude, markerData.longitude]);\n      });\n      if (this.map && bounds.length > 0) {\n        this.map.fitBounds(bounds);\n      }\n    }\n  }\n};","map":{"version":3,"names":["L","positionHistory","name","props","selectedEquipmentId","type","String","required","selectedDate","data","markers","routeControl","loading","watch","newEquipmentId","loadMarkersFromJson","newDate","mounted","createMapLayer","beforeUnmount","map","remove","methods","equipmentId","_this","equipment","find","eq","filteredPositions","positions","filter","position","Date","date","toLocaleDateString","forEach","formattedDate","push","latitude","lat","longitude","lon","descricao","concat","addRoute","_this2","setView","tileLayer","attribution","addTo","whenReady","console","log","setMarkers","_this3","length","waypoints","marker","latLng","removeControl","Routing","control","createMarker","i","waypoint","color","number","icon","divIcon","className","html","iconSize","iconAnchor","_this3$markers$i","bindPopup","routeWhileDragging","on","_this4","bounds","markerData","fitBounds"],"sources":["/home/bruno/Documentos/Teste Aiko - Front END - FINAL/teste-frontend-v4/src/components/LMapRoute.vue"],"sourcesContent":["<template>\r\n  <div style=\"position: relative; width: 100%\">\r\n    <!-- Mapa sempre está presente no DOM, mas o spinner será exibido sobre ele -->\r\n    <div id=\"mapContainer\" :style=\"{ opacity: loading ? 0.5 : 1 }\" />\r\n    <!-- Circular progress como um overlay -->\r\n    <v-progress-circular\r\n      v-if=\"loading\"\r\n      indeterminate\r\n      color=\"primary\"\r\n      size=\"100\"\r\n      style=\"\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n      \"\r\n    >\r\n      <h6>Carregando Rota</h6>\r\n    </v-progress-circular>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"leaflet-routing-machine\";\r\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\r\nimport positionHistory from \"../data/equipmentPositionHistory.json\";\r\n\r\nexport default {\r\n  name: \"LMapRoute\",\r\n  props: {\r\n    selectedEquipmentId: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    selectedDate: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      markers: [],\r\n      routeControl: null, // Para armazenar o controle de rota\r\n      loading: false, // Estado de carregamento\r\n    };\r\n  },\r\n  watch: {\r\n    // Atualizar os marcadores quando o equipamento ou a data forem modificados\r\n    selectedEquipmentId(newEquipmentId) {\r\n      this.loadMarkersFromJson(newEquipmentId, this.selectedDate);\r\n    },\r\n    selectedDate(newDate) {\r\n      this.loadMarkersFromJson(this.selectedEquipmentId, newDate);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.createMapLayer();\r\n  },\r\n  beforeUnmount() {\r\n    if (this.map) {\r\n      this.map.remove();\r\n    }\r\n  },\r\n  methods: {\r\n    loadMarkersFromJson(equipmentId, selectedDate) {\r\n      this.loading = true;\r\n      this.markers = [];\r\n\r\n      // Filtrar equipamento e data, se disponível\r\n      const equipment = positionHistory.find(\r\n        (eq) => eq.equipmentId === equipmentId\r\n      );\r\n\r\n      if (equipment) {\r\n        const filteredPositions = selectedDate\r\n          ? equipment.positions.filter(\r\n              (position) =>\r\n                new Date(position.date).toLocaleDateString(\"pt-BR\") ===\r\n                selectedDate\r\n            )\r\n          : equipment.positions;\r\n\r\n        filteredPositions.forEach((position) => {\r\n          const formattedDate = new Date(position.date).toLocaleDateString(\r\n            \"pt-BR\"\r\n          );\r\n          this.markers.push({\r\n            latitude: position.lat,\r\n            longitude: position.lon,\r\n            descricao: `Data: ${formattedDate}`,\r\n          });\r\n        });\r\n\r\n        // Adiciona a rota somente se o mapa estiver pronto\r\n        if (this.map) {\r\n          this.addRoute();\r\n        }\r\n      } else {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    createMapLayer() {\r\n      // Inicialize o mapa localmente\r\n      const map = L.map(\"mapContainer\").setView([0, 0], 2);\r\n\r\n      L.tileLayer(\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\", {\r\n        attribution:\r\n          '&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n      }).addTo(map);\r\n\r\n      this.map = map; // Armazena o mapa localmente\r\n\r\n      map.whenReady(() => {\r\n        console.log(\"Mapa carregado com sucesso!\");\r\n        this.setMarkers(map); // Certifique-se de que o mapa está pronto antes de adicionar marcadores\r\n      });\r\n    },\r\n\r\n    addRoute() {\r\n      if (!this.map || this.markers.length === 0) {\r\n        this.loading = false; // Finaliza o loading se não houver marcadores\r\n        return;\r\n      }\r\n\r\n      const waypoints = this.markers.map((marker) =>\r\n        L.latLng(marker.latitude, marker.longitude)\r\n      );\r\n\r\n      // Remove o controle de rota anterior, se existir\r\n      if (this.routeControl) {\r\n        this.map.removeControl(this.routeControl);\r\n      }\r\n\r\n      // Adiciona a nova rota e cria marcadores com popups\r\n      this.routeControl = L.Routing.control({\r\n        waypoints,\r\n        createMarker: (i, waypoint) => {\r\n          const color =\r\n            i === 0 ? \"green\" : i === waypoints.length - 1 ? \"red\" : \"darkblue\";\r\n          const number = i + 1; // Número no marcador\r\n\r\n          // Criar o marcador com o número centralizado\r\n          const icon = L.divIcon({\r\n            className: \"custom-icon\",\r\n            html: `<div style=\"background-color: ${color}; color: white; border-radius: 50%; width: 30px; height: 30px; text-align: center; line-height: 30px; font-size: 14px; font-weight: bold;\">${number}</div>`,\r\n            iconSize: [30, 30],\r\n            iconAnchor: [15, 30],\r\n          });\r\n\r\n          // Criar o marcador\r\n          const marker = L.marker(waypoint.latLng, { icon });\r\n\r\n          // Adicionar o popup com a data, latitude e longitude\r\n          const { descricao, latitude, longitude } = this.markers[i];\r\n          marker.bindPopup(`\r\n            <div>\r\n              <p><strong>Data:</strong> ${descricao}</p>\r\n              <p><strong>Latitude:</strong> ${latitude}</p>\r\n              <p><strong>Longitude:</strong> ${longitude}</p>\r\n            </div>\r\n          `);\r\n\r\n          return marker;\r\n        },\r\n        routeWhileDragging: false,\r\n      }).addTo(this.map);\r\n\r\n      this.routeControl.on(\"routesfound\", () => {\r\n        // Finaliza o loading após a rota ser traçada\r\n        this.loading = false;\r\n      });\r\n\r\n      this.routeControl.on(\"routingerror\", () => {\r\n        // Finaliza o loading em caso de erro\r\n        this.loading = false;\r\n      });\r\n    },\r\n\r\n    setMarkers() {\r\n      const bounds = [];\r\n\r\n      this.markers.forEach((markerData, i) => {\r\n        const color =\r\n          i === 0\r\n            ? \"green\"\r\n            : i === this.markers.length - 1\r\n            ? \"red\"\r\n            : \"darkblue\";\r\n        const number = i + 1; // Número no marcador\r\n\r\n        // Criar o marcador com o número centralizado\r\n        const icon = L.divIcon({\r\n          className: \"custom-icon\",\r\n          html: `<div style=\"background-color: ${color}; color: white; border-radius: 50%; width: 30px; height: 30px; text-align: center; line-height: 30px; font-size: 14px; font-weight: bold;\">${number}</div>`,\r\n          iconSize: [30, 30],\r\n          iconAnchor: [15, 30],\r\n        });\r\n\r\n        const marker = L.marker([markerData.latitude, markerData.longitude], {\r\n          icon,\r\n        }).bindPopup(`\r\n          <div>\r\n            <p><strong>Data:</strong> ${markerData.descricao}</p>\r\n            <p><strong>Latitude:</strong> ${markerData.latitude}</p>\r\n            <p><strong>Longitude:</strong> ${markerData.longitude}</p>\r\n          </div>\r\n        `);\r\n\r\n        marker.addTo(this.map);\r\n\r\n        bounds.push([markerData.latitude, markerData.longitude]);\r\n      });\r\n\r\n      if (this.map && bounds.length > 0) {\r\n        this.map.fitBounds(bounds);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#mapContainer {\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 65vh;\r\n  z-index: 1;\r\n}\r\n.custom-icon {\r\n  text-align: center;\r\n  line-height: 30px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}