{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_v_select = _resolveComponent(\"v-select\");\n  var _component_v_col = _resolveComponent(\"v-col\");\n  var _component_LMapRoute = _resolveComponent(\"LMapRoute\");\n  var _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_v_col, {\n        cols: \"12\",\n        md: \"3\",\n        \"class\": \"my-0\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createCommentVNode(\" Componente v-select para selecionar o nome do equipamento \"), _createVNode(_component_v_select, {\n            \"class\": \"mt-2\",\n            variant: \"outlined\",\n            density: \"compact\",\n            modelValue: $data.selectedName,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n              return $data.selectedName = $event;\n            }),\n            items: $data.setNome,\n            label: \"Selecione o Equipamento\",\n            onChange: $options.onEquipmentChange\n          }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"onChange\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_col, {\n        cols: \"12\",\n        md: \"3\",\n        \"class\": \"my-0\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createCommentVNode(\" Componente v-select para selecionar a data \"), _createVNode(_component_v_select, {\n            \"class\": \"mt-2\",\n            variant: \"outlined\",\n            density: \"compact\",\n            modelValue: $data.selectedDate,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n              return $data.selectedDate = $event;\n            }),\n            items: $data.setDate,\n            label: \"Selecione a Data\",\n            onChange: $options.onDateChange\n          }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"onChange\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" Passar o equipmentId e a selectedDate como props para o LMapRoute \"), _createVNode(_component_v_container, {\n        justify: \"center\",\n        \"class\": \"ml-3 border-map\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createCommentVNode(\" Só passar selectedDate se a data já tiver sido alterada \"), _createVNode(_component_LMapRoute, {\n            selectedEquipmentId: $data.selectedEquipmentId,\n            selectedDate: $data.dateChanged ? $data.selectedDate : null\n          }, null, 8 /* PROPS */, [\"selectedEquipmentId\", \"selectedDate\"])];\n        }),\n        _: 1 /* STABLE */\n      })];\n    }),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","_withCtx","_createVNode","_component_v_col","cols","md","_createCommentVNode","_component_v_select","variant","density","modelValue","$data","selectedName","_cache","$event","items","setNome","label","onChange","$options","onEquipmentChange","_","selectedDate","setDate","onDateChange","justify","_component_LMapRoute","selectedEquipmentId","dateChanged"],"sources":["/home/bruno/Documentos/Teste Aiko - FRONT END/teste-frontend-v4/src/views/RouteView.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-col cols=\"12\" md=\"3\" class=\"my-0\">\n      <!-- Componente v-select para selecionar o nome do equipamento -->\n      <v-select\n        class=\"mt-2\"\n        variant=\"outlined\"\n        density=\"compact\"\n        v-model=\"selectedName\"\n        :items=\"setNome\"\n        label=\"Selecione o Equipamento\"\n        @change=\"onEquipmentChange\"\n      />\n    </v-col>\n    \n    <v-col cols=\"12\" md=\"3\" class=\"my-0\">\n      <!-- Componente v-select para selecionar a data -->\n      <v-select\n        class=\"mt-2\"\n        variant=\"outlined\"\n        density=\"compact\"\n        v-model=\"selectedDate\"\n        :items=\"setDate\"\n        label=\"Selecione a Data\"\n        @change=\"onDateChange\"\n      />\n    </v-col>\n\n    <!-- Passar o equipmentId e a selectedDate como props para o LMapRoute -->\n    <v-container justify=\"center\" class=\"ml-3 border-map\">\n      <!-- Só passar selectedDate se a data já tiver sido alterada -->\n      <LMapRoute :selectedEquipmentId=\"selectedEquipmentId\" :selectedDate=\"dateChanged ? selectedDate : null\" />\n    </v-container>\n  </v-container>\n</template>\n\n<script>\nimport LMapRoute from \"../components/LMapRoute\";\nimport equipment from \"../data/equipment.json\";\nimport positionHistory from \"../data/equipmentPositionHistory.json\"; // Importe o histórico de posições\n\nexport default {\n  name: \"EquipmentMap\",\n  components: {\n    LMapRoute,\n  },\n  data() {\n    return {\n      selectedName: null, // Nome do equipamento selecionado\n      setNome: [], // Lista de nomes dos equipamentos para o v-select\n      nameToIdMap: new Map(), // Mapa para associar nome ao id\n      selectedEquipmentId: null, // ID do equipamento selecionado\n      selectedDate: null, // Data selecionada\n      setDate: [], // Lista de datas disponíveis para o v-select de datas\n      dateChanged: false, // Controla se a data foi alterada pelo usuário\n    };\n  },\n  mounted() {\n    // Preencher a lista de nomes e o mapa de associação nome-id\n    this.setNome = equipment.map((equip) => equip.name);\n    this.nameToIdMap = new Map(\n      equipment.map((equip) => [equip.name, equip.id])\n    );\n\n    // Preencher a lista de datas com as datas disponíveis no histórico de posições\n    this.setDate = Array.from(\n      new Set(positionHistory.flatMap((eq) => eq.positions.map((pos) => {\n        const date = new Date(pos.date).toLocaleDateString(\"pt-BR\");\n        return date;\n      })))\n    ).sort((a, b) => new Date(a) - new Date(b)); // Ordenar datas\n\n    // Definir o equipamento selecionado inicialmente\n    if (this.setNome.length > 0) {\n      this.selectedName = this.setNome[0];\n      this.selectedEquipmentId = this.nameToIdMap.get(this.selectedName);\n    }\n  },\n  watch: {\n    selectedName(newName) {\n      // Atualizar o ID do equipamento conforme o nome selecionado\n      this.selectedEquipmentId = this.nameToIdMap.get(newName);\n    },\n    selectedDate(newDate) {\n      // Atualizar o ID do equipamento conforme o nome selecionado\n      this.selectedDate = newDate;\n      console.log(\"Selected Date:\", this.selectedDate);\n    },\n  },\n  methods: {\n    onEquipmentChange() {\n      // Função disparada quando o nome do equipamento é selecionado no v-select\n      console.log(\"Selected Equipment Name:\", this.selectedName);\n      console.log(\"Selected Equipment ID:\", this.selectedEquipmentId);\n    },\n    onDateChange() {\n      // Função disparada quando a data é selecionada no v-select\n      this.dateChanged = true; // Marca que a data foi alterada pelo usuário\n      console.log(\"Selected Date (BR format):\", this.selectedDate);\n    },\n  },\n};\n</script>\n"],"mappings":";;;;;;uBACEA,YAAA,CAgCcC,sBAAA;IAjChB,WAAAC,QAAA,CAEI;MAAA,OAWQ,CAXRC,YAAA,CAWQC,gBAAA;QAXDC,IAAI,EAAC,IAAI;QAACC,EAAE,EAAC,GAAG;QAAC,SAAM;;QAFlC,WAAAJ,QAAA,CAGM;UAAA,OAAkE,CAAlEK,mBAAA,+DAAkE,EAClEJ,YAAA,CAQEK,mBAAA;YAPA,SAAM,MAAM;YACZC,OAAO,EAAC,UAAU;YAClBC,OAAO,EAAC,SAAS;YAPzBC,UAAA,EAQiBC,KAAA,CAAAC,YAAY;YAR7B,uBAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;cAAA,OAQiBH,KAAA,CAAAC,YAAY,GAAAE,MAAA;YAAA;YACpBC,KAAK,EAAEJ,KAAA,CAAAK,OAAO;YACfC,KAAK,EAAC,yBAAyB;YAC9BC,QAAM,EAAEC,QAAA,CAAAC;;;QAXjBC,CAAA;UAeInB,YAAA,CAWQC,gBAAA;QAXDC,IAAI,EAAC,IAAI;QAACC,EAAE,EAAC,GAAG;QAAC,SAAM;;QAflC,WAAAJ,QAAA,CAgBM;UAAA,OAAmD,CAAnDK,mBAAA,gDAAmD,EACnDJ,YAAA,CAQEK,mBAAA;YAPA,SAAM,MAAM;YACZC,OAAO,EAAC,UAAU;YAClBC,OAAO,EAAC,SAAS;YApBzBC,UAAA,EAqBiBC,KAAA,CAAAW,YAAY;YArB7B,uBAAAT,MAAA,QAAAA,MAAA,gBAAAC,MAAA;cAAA,OAqBiBH,KAAA,CAAAW,YAAY,GAAAR,MAAA;YAAA;YACpBC,KAAK,EAAEJ,KAAA,CAAAY,OAAO;YACfN,KAAK,EAAC,kBAAkB;YACvBC,QAAM,EAAEC,QAAA,CAAAK;;;QAxBjBH,CAAA;UA4BIf,mBAAA,uEAA0E,EAC1EJ,YAAA,CAGcF,sBAAA;QAHDyB,OAAO,EAAC,QAAQ;QAAC,SAAM;;QA7BxC,WAAAxB,QAAA,CA8BM;UAAA,OAAgE,CAAhEK,mBAAA,6DAAgE,EAChEJ,YAAA,CAA0GwB,oBAAA;YAA9FC,mBAAmB,EAAEhB,KAAA,CAAAgB,mBAAmB;YAAGL,YAAY,EAAEX,KAAA,CAAAiB,WAAW,GAAGjB,KAAA,CAAAW,YAAY;;;QA/BrGD,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}